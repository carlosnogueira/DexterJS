/*! Dexter JS - v0.1.0 - 2012-07-11
* https://github.com/leobalter/DexterJS
* Copyright (c) 2012 Leonardo Balter; Licensed MIT, GPL */
(function(a){function b(){function e(a,b){this._oldCall=a[b],this._seenObj=a,this._seenMethod=b}function f(a,b,c,f){var g=this;if(typeof c!="string")throw"Dexter should receive method name as a String";if(!b||typeof b[c]!="function")throw'Dexter should receive a valid object and method combination in arguments. Ex.: window & "alert".';typeof f=="function"&&(this.callback=f),e.call(this,b,c),b[c]=function(){var b=[].slice.apply(arguments);g.called=g.called+1,d[a].call(this,g,b),typeof g.callback=="function"&&g.callback.apply(this,b)}}function g(a,b){return new f("spy",a,b)}function h(a,b,c){return new f("stub",a,b,c)}var a,b,c,d;return a=function(){this._seenObj[this._seenMethod]=this._oldCall,this.isActive=!1},c={called:0,restore:a,isActive:!0,callback:b},d={spy:function(a,b){a._oldCall.apply(this,b)},stub:function(){}},f.prototype=c,{spy:g,stub:h}}a.Dexter=b()})(this);